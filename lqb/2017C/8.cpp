#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;
int db[9][9]=
{
    {0,0,0,0,0,0,0,0},
    {4,9,2,3,5,7,8,1,6},
    {8,3,4,1,5,9,6,7,2},
    {6,1,8,7,5,3,2,9,4},
    {2,7,6,9,5,1,4,3,8},
    {2,9,4,7,5,3,6,1,8},
    {4,3,8,9,5,1,2,7,6},
    {8,1,6,3,5,7,4,9,2},
    {6,7,2,1,5,9,8,3,4}
};
bool vis[9];
int sit;
/*
思路
输入数据，每一个数字跟相同列的其他可能相比较，全部都一样的肯定是符合条件的，并标记为真。
最后再遍历一遍 vis 如果超过两个以上答案too many，否则将其输出

*/
int main()
{
    int i,j;
    for(i=0;i<9;i++){scanf("%d",&db[0][i]);vis[i] = true;}

    for(i=1;i<=8;i++)
    {
        for(j=0;j<9;j++)   
        {
            if(db[0][j] == 0)continue;
            if(db[0][j] == db[i][j])continue;
            else 
                vis[i] = 0;
        }
    }
    int cnt = 0;
    for(i=1;i<=8;i++)
    {
        if(vis[i]){sit=i;cnt++;}        
    }
    if(cnt!=1)printf("Too Many");
    else
    {
        for(i=0;i<9;i++)
        {
            printf("%d ",db[sit][i]);
            if((i+1)%3 == 0)printf("\n");
        }
    }
    //for(i=0;i<9;i++)printf("%d ",db[0][i]);
    return 0;
}
/*

试题 历届试题 九宫幻方
 
资源限制
时间限制：1.0s   内存限制：256.0MB
问题描述
　　小明最近在教邻居家的小朋友小学奥数，而最近正好讲述到了三阶幻方这个部分，三阶幻方指的是将1~9不重复的填入一个3*3的矩阵当中，使得每一行、每一列和每一条对角线的和都是相同的。

　　三阶幻方又被称作九宫格，在小学奥数里有一句非常有名的口诀：“二四为肩，六八为足，左三右七，戴九履一，五居其中”，通过这样的一句口诀就能够非常完美的构造出一个九宫格来。

　　4 9 2
　　3 5 7
　　8 1 6


　　有意思的是，所有的三阶幻方，都可以通过这样一个九宫格进行若干镜像和旋转操作之后得到。现在小明准备将一个三阶幻方（不一定是上图中的那个）中的一些数抹掉，交给邻居家的小朋友来进行还原，并且希望她能够判断出究竟是不是只有一个解。

　　而你呢，也被小明交付了同样的任务，但是不同的是，你需要写一个程序~
输入格式
　　输入仅包含单组测试数据。
　　每组测试数据为一个3*3的矩阵，其中为0的部分表示被小明抹去的部分。
　　对于100%的数据，满足给出的矩阵至少能还原出一组可行的三阶幻方。
输出格式
　　如果仅能还原出一组可行的三阶幻方，则将其输出，否则输出“Too Many”（不包含引号）。
样例输入
0 7 2
0 5 0
0 3 0
样例输出
6 7 2
1 5 9
8 3 4

*/